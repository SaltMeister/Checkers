{"version":3,"sources":["components/Piece.jsx","components/Board.jsx","components/App.jsx","index.js"],"names":["Piece","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","class","src","pieceImg","Component","Board","board","enemyPiece","piece","isClick","clickedPieceCord","pieceChosen","turn","turnMessage","x","rIndex","cIndex","setState","length","yourKingPiece","enemyKingPiece","turnNumber","kingMove","newBoard","toConsumableArray","colDist","console","log","makeKing","checkWinner","enemyCount","pieceCount","i","k","alert","row","column","pieceType","currentRow","currentColumn","moveRow","moveColumn","rowDist","_this2","className","map","rowIndex","columnIndex","onClick","handleMove","components_Piece","App","yourPiece","containerStyle","background","id","style","components_Board","handleTurn","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b7f2819.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import components\r\n\r\nexport class Piece extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <img class=\"piece\" src={this.props.pieceImg}></img>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Piece;","import React, { Component } from 'react';\r\nimport Piece from './Piece.jsx'\r\n// import components\r\n\r\nexport class Board extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {        \r\n      board: [\r\n      [this.props.enemyPiece, null, this.props.enemyPiece, null, this.props.enemyPiece, null, this.props.enemyPiece, null],\r\n      [null, this.props.enemyPiece, null, this.props.enemyPiece, null, this.props.enemyPiece, null, this.props.enemyPiece],\r\n      [this.props.enemyPiece, null, this.props.enemyPiece, null, this.props.enemyPiece, null, this.props.enemyPiece, null],\r\n      [null, null, null, null, null, null, null, null],\r\n      [null, null, null, null, null, null, null, null],\r\n      [null, this.props.piece, null, this.props.piece, null, this.props.piece, null, this.props.piece],\r\n      [ this.props.piece, null, this.props.piece, null, this.props.piece, null, this.props.piece, null], \r\n      [null, this.props.piece, null, this.props.piece, null, this.props.piece, null, this.props.piece],\r\n    ],\r\n    isClick: false,\r\n    clickedPieceCord: [],\r\n    pieceChosen: null,\r\n    turn: 0,\r\n    turnMessage: \"Your Turn\",\r\n    }\r\n  }\r\n\r\n  handleMove(x, rIndex, cIndex)\r\n  {\r\n    if(x != null)\r\n    {\r\n      this.setState({\r\n        clickedPieceCord: [rIndex, cIndex],\r\n        pieceChosen: x,\r\n      });\r\n    }\r\n    else \r\n    {\r\n      if(this.state.clickedPieceCord.length > 0 && (this.state.pieceChosen === this.props.yourKingPiece || this.state.pieceChosen === this.props.enemyKingPiece))\r\n      {\r\n        if(this.state.pieceChosen === this.props.enemyKingPiece && this.props.turnNumber === 1)\r\n          this.kingMove(this.state.clickedPieceCord[0], this.state.clickedPieceCord[1], rIndex, cIndex, this.state.pieceChosen);\r\n        else if(this.state.pieceChosen === this.props.yourKingPiece && this.props.turnNumber === 0)\r\n          this.kingMove(this.state.clickedPieceCord[0], this.state.clickedPieceCord[1], rIndex, cIndex, this.state.pieceChosen);\r\n      }\r\n      else\r\n      {\r\n        if((this.state.clickedPieceCord.length > 0 && this.state.pieceChosen === this.props.piece) && this.props.turnNumber === 0)\r\n        {\r\n          let rowDist = rIndex - this.state.clickedPieceCord[0];\r\n          let newBoard = [...this.state.board];\r\n  \r\n          //determines if the which piece was clicked and when the moved happens, changes the board to the selected piece\r\n          if(rIndex === this.state.clickedPieceCord[0] - 1 && (cIndex === this.state.clickedPieceCord[1] + 1 || cIndex === this.state.clickedPieceCord[1] - 1))\r\n          {\r\n            newBoard[rIndex][cIndex] = this.props.piece;\r\n            newBoard[this.state.clickedPieceCord[0]][this.state.clickedPieceCord[1]] = null;\r\n            \r\n            this.setState({\r\n              clickedPieceCord: [],\r\n              board: newBoard,          \r\n              });\r\n            this.makeKing(rIndex, cIndex, this.state.pieceChosen);\r\n            {this.props.turn()}\r\n          }//end of the inside if statement\r\n          //this else if determines if the user can kill an enemy piece\r\n          else if((rIndex === this.state.clickedPieceCord[0] - 2 && (cIndex === this.state.clickedPieceCord[1] + 2 || cIndex === this.state.clickedPieceCord[1] - 2)) && this.state.board[rIndex][cIndex] === null)\r\n          {\r\n            let colDist = cIndex - this.state.clickedPieceCord[1];\r\n            if((colDist === 2) && (this.state.board[this.state.clickedPieceCord[0] - 1][this.state.clickedPieceCord[1] + 1]) === this.props.enemyPiece || (this.state.board[this.state.clickedPieceCord[0] - 1][this.state.clickedPieceCord[1] + 1]) === this.props.enemyKingPiece)\r\n            {\r\n              newBoard[rIndex][cIndex] = this.props.piece;\r\n              newBoard[this.state.clickedPieceCord[0]][this.state.clickedPieceCord[1]] = null;\r\n              newBoard[this.state.clickedPieceCord[0] - 1][this.state.clickedPieceCord[1] + 1] = null;\r\n              console.log(\"kill enemyPiece by going right\");\r\n  \r\n              this.setState({\r\n                clickedPieceCord: [],\r\n                board: newBoard,          \r\n                });\r\n              this.makeKing(rIndex, cIndex, this.state.pieceChosen);\r\n              {this.props.turn()}\r\n            }\r\n            else if ((colDist === -2) && (this.state.board[this.state.clickedPieceCord[0] - 1][this.state.clickedPieceCord[1] - 1]) === this.props.enemyPiece || (this.state.board[this.state.clickedPieceCord[0] - 1][this.state.clickedPieceCord[1] - 1]) === this.props.enemyKingPiece)\r\n            {\r\n              newBoard[rIndex][cIndex] = this.props.piece;\r\n              newBoard[this.state.clickedPieceCord[0]][this.state.clickedPieceCord[1]] = null;\r\n              newBoard[this.state.clickedPieceCord[0] - 1][this.state.clickedPieceCord[1] - 1] = null;\r\n              console.log(\"killed enemyPiece going left\");\r\n  \r\n              this.setState({\r\n                clickedPieceCord: [],\r\n                board: newBoard,          \r\n                });\r\n              this.makeKing(rIndex, cIndex, this.state.pieceChosen);\r\n              {this.props.turn()}\r\n            }  \r\n          }\r\n        }//end of first if statement\r\n        else if((this.state.clickedPieceCord.length > 0 && this.state.pieceChosen === this.props.enemyPiece) && this.props.turnNumber === 1)\r\n        {\r\n          let rowDist = rIndex - this.state.clickedPieceCord[0];\r\n          let newBoard = [...this.state.board];\r\n          //determines if the which piece was clicked and when the moved happens, changes the board to the selected piece\r\n          if((rIndex === this.state.clickedPieceCord[0] + 1 && (cIndex === this.state.clickedPieceCord[1] + 1 || cIndex === this.state.clickedPieceCord[1] - 1)) && this.state.board[rIndex][cIndex] === null)\r\n          {\r\n            newBoard[rIndex][cIndex] = this.props.enemyPiece;\r\n            newBoard[this.state.clickedPieceCord[0]][this.state.clickedPieceCord[1]] = null;\r\n  \r\n            this.setState({\r\n              clickedPieceCord: [],\r\n              board: newBoard,          \r\n            });\r\n            this.makeKing(rIndex, cIndex, this.state.pieceChosen);\r\n            {this.props.turn()}\r\n          }//end of if\r\n          else if((rIndex === this.state.clickedPieceCord[0] + 2 && (cIndex === this.state.clickedPieceCord[1] + 2 || cIndex === this.state.clickedPieceCord[1] - 2)) && this.state.board[rIndex][cIndex] === null)\r\n          {\r\n            let colDist = cIndex - this.state.clickedPieceCord[1];\r\n  \r\n            if((colDist === 2) && (this.state.board[this.state.clickedPieceCord[0] + 1][this.state.clickedPieceCord[1] + 1]) === this.props.piece || (this.state.board[this.state.clickedPieceCord[0] + 1][this.state.clickedPieceCord[1] + 1]) === this.props.yourKingPiece)\r\n            {\r\n              newBoard[rIndex][cIndex] = this.props.enemyPiece;\r\n              newBoard[this.state.clickedPieceCord[0]][this.state.clickedPieceCord[1]] = null;\r\n              newBoard[this.state.clickedPieceCord[0] + 1][this.state.clickedPieceCord[1] + 1] = null;\r\n              console.log(\"killed Piece going right\");\r\n  \r\n              this.setState({\r\n                clickedPieceCord: [],\r\n                board: newBoard,          \r\n                });\r\n              this.makeKing(rIndex, cIndex, this.state.pieceChosen);\r\n              {this.props.turn()}\r\n            }\r\n            else if((colDist === -2) && (this.state.board[this.state.clickedPieceCord[0] + 1][this.state.clickedPieceCord[1] - 1]) === this.props.piece || (this.state.board[this.state.clickedPieceCord[0] + 1][this.state.clickedPieceCord[1] - 1]) === this.props.yourKingPiece)\r\n            {\r\n              \r\n              newBoard[rIndex][cIndex] = this.props.enemyPiece;\r\n              newBoard[this.state.clickedPieceCord[0]][this.state.clickedPieceCord[1]] = null;\r\n              newBoard[this.state.clickedPieceCord[0] + 1][this.state.clickedPieceCord[1] - 1] = null;\r\n              console.log(\"killed Piece going left\");\r\n  \r\n              this.setState({\r\n                clickedPieceCord: [],\r\n                board: newBoard,          \r\n                });\r\n              this.makeKing(rIndex, cIndex, this.state.pieceChosen);\r\n              {this.props.turn()}\r\n            } \r\n          }\r\n        }//end of else if\r\n      }//end of the else statement\r\n    }//end of the big else statement\r\n    this.checkWinner();\r\n  }\r\n\r\n  checkWinner()\r\n  {\r\n    let enemyCount = 0;\r\n    let pieceCount = 0;\r\n    for(let i=0;i<this.state.board.length;i++)\r\n    {\r\n      for(let k=0;k<this.state.board[i].length;k++)\r\n      {\r\n        if(this.state.board[i][k] === this.props.piece || this.state.board[i][k] === this.props.yourKingPiece)\r\n          pieceCount++;\r\n        else if(this.state.board[i][k] === this.props.enemyPiece || this.state.board[i][k] === this.props.enemyKingPiece)\r\n          enemyCount++;\r\n      }\r\n    }\r\n    if(pieceCount === 0)\r\n      alert(\"Red has won\");\r\n    else if(enemyCount === 0)\r\n      alert(\"Black has won\");\r\n  }\r\n\r\n  makeKing(row, column, pieceType)\r\n  {\r\n   let newBoard = [...this.state.board];\r\n   if(pieceType === this.props.piece && row === 0)\r\n   {\r\n      newBoard[row][column] = this.props.yourKingPiece;\r\n   }\r\n   else if(pieceType === this.props.enemyPiece && row === 7)\r\n   {\r\n      newBoard[row][column] = this.props.enemyKingPiece;   \r\n      console.log(\"make red king\");  \r\n   }\r\n   this.setState({\r\n      board: newBoard,     \r\n   })\r\n  }\r\n\r\n  kingMove(currentRow, currentColumn, moveRow, moveColumn, pieceType)\r\n  {\r\n    let newBoard = [...this.state.board];\r\n    //movement for all kings\r\n    if(((moveRow === currentRow - 1 && (moveColumn === currentColumn + 1 || moveColumn === currentColumn - 1)) || (moveRow === currentRow + 1 && (moveColumn === currentColumn + 1 || moveColumn === currentColumn - 1))) && this.state.board[moveRow][moveColumn] === null)\r\n    {\r\n      newBoard[moveRow][moveColumn] = pieceType;\r\n      newBoard[currentRow][currentColumn] = null;\r\n      \r\n      this.setState({\r\n        clickedPieceCord: [],\r\n        board: newBoard,          \r\n        });\r\n      {this.props.turn()}\r\n    }\r\n    //movement for your king\r\n    else if( ((moveRow === currentRow - 2 && (moveColumn === currentColumn + 2 || moveColumn === currentColumn - 2)) || ((moveRow === currentRow + 2 && (moveColumn === currentColumn + 2 || moveColumn === currentColumn - 2)))) && (this.state.board[moveRow][moveColumn] === null && pieceType === this.props.yourKingPiece) )\r\n    {\r\n      let colDist = moveColumn - currentColumn;\r\n      let rowDist = moveRow - currentRow;\r\n      console.log(rowDist);\r\n      //forward killing for your king\r\n      if((colDist === 2 && rowDist === -2) && ((this.state.board[currentRow - 1][currentColumn + 1]) === this.props.enemyPiece || (this.state.board[currentRow - 1][currentColumn + 1]) === this.props.enemyKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow - 1][currentColumn + 1] = null;\r\n        console.log(\"kill enemyPiece by going top right\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      }\r\n      else if ((colDist === -2 && rowDist === -2) && ((this.state.board[currentRow - 1][currentColumn - 1]) === this.props.enemyPiece || (this.state.board[currentRow - 1][currentColumn - 1]) === this.props.enemyKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow - 1][currentColumn - 1] = null;\r\n        console.log(\"killed enemyPiece going top left\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      } \r\n      //backward killing for your king\r\n      else if ((colDist === 2 && rowDist === 2) && ((this.state.board[currentRow + 1][currentColumn + 1]) === this.props.enemyPiece || (this.state.board[currentRow + 1][currentColumn + 1]) === this.props.enemyKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow + 1][currentColumn + 1] = null;\r\n        console.log(\"killed enemyPiece going down Right\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      }   \r\n      else if ((colDist === -2 && rowDist === 2) && ((this.state.board[currentRow + 1][currentColumn - 1]) === this.props.enemyPiece || (this.state.board[currentRow + 1][currentColumn - 1]) === this.props.enemyKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow + 1][currentColumn - 1] = null;\r\n        console.log(\"killed enemyPiece going down left\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      }  \r\n    }\r\n    //killing for enemy king\r\n    else if( ((moveRow === currentRow - 2 && (moveColumn === currentColumn + 2 || moveColumn === currentColumn - 2)) || ((moveRow === currentRow + 2 && (moveColumn === currentColumn + 2 || moveColumn === currentColumn - 2)))) && (this.state.board[moveRow][moveColumn] === null && pieceType === this.props.enemyKingPiece) )\r\n    {\r\n      let colDist = moveColumn - currentColumn;\r\n      let rowDist = moveRow - currentRow;\r\n      console.log(rowDist);\r\n      //forward killing for enemy king\r\n      if((colDist === 2 && rowDist === -2) && ((this.state.board[currentRow - 1][currentColumn + 1]) === this.props.piece || (this.state.board[currentRow - 1][currentColumn + 1]) === this.props.yourKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow - 1][currentColumn + 1] = null;\r\n        console.log(\"kill Piece by going top right\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      }\r\n      else if ((colDist === -2 && rowDist === -2) && ((this.state.board[currentRow - 1][currentColumn - 1]) === this.props.piece || (this.state.board[currentRow - 1][currentColumn - 1]) === this.props.yourKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow - 1][currentColumn - 1] = null;\r\n        console.log(\"killed Piece going top left\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      } \r\n      //backward killing for enemy king\r\n      else if ((colDist === 2 && rowDist === 2) && ((this.state.board[currentRow + 1][currentColumn + 1]) === this.props.piece || (this.state.board[currentRow + 1][currentColumn + 1]) === this.props.yourKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow + 1][currentColumn + 1] = null;\r\n        console.log(\"killed Piece going bot right\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      }   \r\n      else if ((colDist === -2 && rowDist === 2) && ((this.state.board[currentRow + 1][currentColumn - 1]) === this.props.piece || (this.state.board[currentRow + 1][currentColumn - 1]) === this.props.yourKingPiece))\r\n      {\r\n        newBoard[moveRow][moveColumn] = pieceType;\r\n        newBoard[currentRow][currentColumn] = null;\r\n        newBoard[currentRow + 1][currentColumn - 1] = null;\r\n        console.log(\"killed Piece going bot left\");\r\n\r\n        this.setState({\r\n          clickedPieceCord: [],\r\n          board: newBoard,          \r\n          });\r\n        {this.props.turn()}\r\n      }  \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n          {this.state.board.map( (row, rowIndex) => { return (<div className=\"row\"> { row.map( (column, columnIndex) => { \r\n            return (columnIndex % 2 === 0 && rowIndex % 2 === 0 ?<div className=\"box white\" onClick={() => this.handleMove(column, rowIndex, columnIndex)}><Piece pieceImg={column}></Piece></div> : columnIndex % 2 === 1 && rowIndex % 2 === 1 ? <div className=\"box white\" onClick={() => this.handleMove(column, rowIndex, columnIndex)}><Piece pieceImg={column}></Piece></div> : <div className=\"box black\" onClick={() => this.handleMove(column, rowIndex, columnIndex)}><Piece pieceImg={column}></Piece></div>);\r\n            } )}</div>)})}  \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\n//import Piece from './Piece.jsx';\r\nimport Board from './Board.jsx';\r\nimport '../css/App.css';\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    //when turn is 0, it is player turn, 1 is enemy turn\r\n    this.state = {  \r\n        turn: 0,\r\n        turnMessage: \"Your Turn\",\r\n        yourPiece: 'https://chongzizil.github.io/Checkers-SMG/imgs/black_man.png',\r\n        enemyPiece: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT2KGHea9sVjCtOtz1FidEXhtaQU8GLwjRxFbrpomFgRWSezqjS&usqp=CAU',\r\n        yourKingPiece: 'https://i.ya-webdesign.com/images/checkers-king-png-11.png',\r\n        enemyKingPiece: 'https://cdn0.iconfinder.com/data/icons/board-games-flat-1/48/Games_BoardGames_Artboard_14-512.png',\r\n                }\r\n  }\r\n  handleTurn()\r\n  {\r\n    if(this.state.turn === 0)\r\n    {\r\n      this.setState({\r\n        turn: 1,\r\n        turnMessage: \"Enemy Turn\",\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        turn: 0,\r\n        turnMessage: \"Your Turn\",\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let containerStyle = {};\r\n    if(this.state.turn === 1)\r\n      containerStyle.background = \"#CD5C5C\";\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <div id=\"turn\" style={containerStyle}>\r\n          <h1>{this.state.turnMessage}</h1>\r\n        </div>\r\n        <Board turnNumber={this.state.turn} turn={() => this.handleTurn()}piece={this.state.yourPiece} enemyPiece={this.state.enemyPiece} yourKingPiece={this.state.yourKingPiece} enemyKingPiece={this.state.enemyKingPiece}></Board>\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/App.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}